<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://biji.675222.xyz/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://biji.675222.xyz/</id>
  <title>Fantasy的笔记</title>
  <subtitle>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</subtitle>
  <icon>https://biji.675222.xyz/favicon.ico</icon>
  <updated>2024-12-12T14:53:23.642Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://biji.675222.xyz/atom.xml"/>
  <link rel="alternate" href="https://biji.675222.xyz/"/>
  <category term="软件"/>
  <category term="网络"/>
  <category term="工具"/>
  <entry>
    <title type="text">Windows安装Anaconda</title>
    <id>https://biji.675222.xyz/posts/2024-09-26-blog_%E8%BD%AF%E4%BB%B6_Anaconda.html</id>
    <link href="https://biji.675222.xyz/posts/2024-09-26-blog_%E8%BD%AF%E4%BB%B6_Anaconda.html"/>
    <updated>2024-09-28T03:08:48.000Z</updated>
    <summary type="html"><![CDATA[<p>​	Anaconda是一个广泛用于数据科学和机器学习的Python发行版，它简化了Python环境和库的管理。</p>
<h2>步骤一：下载Anaconda</h2>
<p>​	一般两个选择，一个是官网，另一个是国内<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener noreferrer">镜像网站</a>（<strong>大家自行选择</strong>）。前者速度感人，所以国内可以选择镜像下载。</p>
<h4>1.镜像网站。</h4>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/acdeb466f0954f7c4739b6e3b9c2b0fa.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<p>​	Anaconda是一个广泛用于数据科学和机器学习的Python发行版，它简化了Python环境和库的管理。</p>
<h2>步骤一：下载Anaconda</h2>
<p>​	一般两个选择，一个是官网，另一个是国内<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener noreferrer">镜像网站</a>（<strong>大家自行选择</strong>）。前者速度感人，所以国内可以选择镜像下载。</p>
<h4>1.镜像网站。</h4>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/acdeb466f0954f7c4739b6e3b9c2b0fa.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/45367b7dabece7b956bb748a72062883.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>2.官网。</h4>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/bf3fc8a36ed35e35c1b849b980f4bf16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/7782f6596e3ac42c5fcf2960c3cd1393.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>步骤二：安装Anaconda</h2>
<h5>1.运行安装程序： 双击下载的安装程序启动安装向导。</h5>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/d3192d358b02f3939abab85c561aba99.png" alt="image-20240926143617252" tabindex="0" loading="lazy"><figcaption>image-20240926143617252</figcaption></figure>
<h5>2.一直点击 Next &gt; 到这里可以修改安装路径（我设置的是<span id="1.1">D:\Anaconda3</span>，后续设置要用）。</h5>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/35c8bd1ab32eca76d4a772700c08fd44.png" alt="image-20240926143648580" tabindex="0" loading="lazy"><figcaption>image-20240926143648580</figcaption></figure>
<p>第一项：创建开始快捷方式。</p>
<p>第二项：自动将Anaconda3添加到我的PATH环境变量，建议自己设置。</p>
<p>第三项：注册Anaconda3作为我默认的Python 3.10。</p>
<p>第四项：完成后清除包缓存。</p>
<p>（建议按下图方式勾选，再点击“Install”）</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/0a4f36c2baca22a6f7c7bcfc92046936.png" alt="image-20240926151316314" tabindex="0" loading="lazy"><figcaption>image-20240926151316314</figcaption></figure>
<h5>3.一直点击直到点击 <strong>Finish</strong> 出现如下画面：</h5>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/7683cc9f859d07e39db9de286ddbf79d.png" alt="image-20240926152753956" tabindex="0" loading="lazy"><figcaption>image-20240926152753956</figcaption></figure>
<h2>步骤三：手动配置环境变量</h2>
<p>​	如果上述步骤5中没有勾选第二项（将Anaconda3添加到我的PATH环境变量），那么需要我们手动配置环境变量。</p>
<h5>1.点击桌面上的“此电脑”，右键选择“属性”并点击，之后点击进入系统高级设置。</h5>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/a129a82edf1a6492f871f1b2f5c0f671.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h5>2.点击进入环境变量设置。</h5>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/08012a4aed2a05076635b05eed67dd99.png" alt="环境变量" tabindex="0" loading="lazy"><figcaption>环境变量</figcaption></figure>
<h5>3.进入的环境变量后，在系统变量一栏中找到<strong>变量：Path</strong>，双击进入编辑界面。在右边点击新建按钮添加如下三条变量。</h5>
<blockquote>
<p>D:\Anaconda3
D:\Anaconda3\Scripts
D:\Anaconda3\Library\bin</p>
<p>注意我装的是<a href="#1.1">D:\Anaconda3</a>这个目录，你要根据自己实际安装目录进行改动，比如装在C:\Anaconda3，就把所有D改成C就行，看情况不要无脑改。</p>
</blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/eb1af77a058f3379eba29480ef8c15ee.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h5>4.最后，把刚才点击出来的窗口全部点击确定就行了。</h5>
<h5>5.测试：</h5>
<h6>5.1 打开CMD，输入conda info命令。</h6>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/0717bc72d54b13180d2b4477469e4d25.png" alt="CMD" tabindex="0" loading="lazy"><figcaption>CMD</figcaption></figure>
<p>​	有如上界面则Anaconda成功，如果提示conda不是内部或外部命令，那一般是，Anaconda的<strong>环境变量</strong>没配置好。</p>
]]></content>
    <category term="软件"/>
    <published>2024-09-26T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Windows 10/11 设置 IPv4/IPv6 访问优先级</title>
    <id>https://biji.675222.xyz/posts/2024-09-20-blog_%E7%BD%91%E7%BB%9C_ipv6.html</id>
    <link href="https://biji.675222.xyz/posts/2024-09-20-blog_%E7%BD%91%E7%BB%9C_ipv6.html"/>
    <updated>2024-09-28T03:08:48.000Z</updated>
    <summary type="html"><![CDATA[<h2>一、查看网络前缀访问优先级</h2>
<p>​	先查看Windows10/11 中访问网站时 IPv4/IPv6 的优先级，可以看到 IPv6(<code>::/0</code>)比 IPv4(<strong><code>::ffff:0:0/96</code></strong>) 的优先级高，所以ipv6会被优先访问。</p>
<blockquote>
<p>优先顺序越大优先级越高，会优先访问。</p>
<p>命令：<strong>netsh interface ipv6 show prefixpolicies</strong></p>
</blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/1405768e12b6fd29d031d2981a4c7aaf.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<h2>一、查看网络前缀访问优先级</h2>
<p>​	先查看Windows10/11 中访问网站时 IPv4/IPv6 的优先级，可以看到 IPv6(<code>::/0</code>)比 IPv4(<strong><code>::ffff:0:0/96</code></strong>) 的优先级高，所以ipv6会被优先访问。</p>
<blockquote>
<p>优先顺序越大优先级越高，会优先访问。</p>
<p>命令：<strong>netsh interface ipv6 show prefixpolicies</strong></p>
</blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/1405768e12b6fd29d031d2981a4c7aaf.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>二、网络前缀含义</h2>
<p>​	依次介绍下这些前缀的含义。</p>
<p>​	Windows10/11 中默认的访问前缀规则是参照 <a href="https://www.rfc-editor.org/rfc/rfc6724#section-2.1" target="_blank" rel="noopener noreferrer">RFC6724: Default Address Selection for Internet Protocol Version 6 (IPv6)</a> 实现的。</p>
<ul>
<li><strong><code>::1/128</code></strong>：这是<strong>IPv6本地主机地址</strong>，类似于IPv4中的127.0.0.1，表示回环地址。它用于测试和本地通信，不会发送到网络中。</li>
<li><strong><code>::/0</code></strong>：这是<strong>默认路由</strong>，类似于IPv4中的<code>0.0.0.0/0</code>，表示所有未被更具体路由匹配的IPv6地址。这意味着这个前缀包含整个IPv6地址空间。</li>
<li><strong><code>::ffff:0:0/96</code></strong>：这是<strong>IPv4映射的IPv6地址</strong>，用于IPv4和IPv6之间的兼容性。这类地址用于在IPv6栈上表示IPv4地址，通常用于过渡技术。</li>
<li><strong><code>2002::/16</code></strong>：这是<strong>6to4自动隧道地址</strong>。6to4是一种过渡机制，用于在IPv4互联网传输IPv6流量。<code>2002::/16</code>前缀中的地址将IPv4地址编码到IPv6地址中。</li>
<li><strong><code>2001::/32</code></strong>：这是<strong>Teredo隧道地址</strong>，用于IPv6通过IPv4网络的过渡。Teredo是一种隧道协议，使NAT（网络地址转换）后的主机可以使用IPv6。</li>
<li><strong><code>fc00::/7</code></strong>：这是<strong>本地唯一地址（ULA）</strong>，类似于IPv4中的私有地址（如<code>192.168.x.x</code>）。这些地址仅用于本地网络通信，不应该在全球路由器上发布。</li>
<li><strong><code>fec0::/10</code></strong>：这是<strong>弃用的站点本地地址</strong>，曾经用于类似私有IPv6网络的环境，但由于设计上的问题，已经被替换为<strong>ULA</strong>（<strong><code>fc00::/7</code></strong>）。</li>
<li><strong><code>3ffe::/16</code></strong>：这是<strong>6bone测试网络地址</strong>。6bone是早期的IPv6测试网络，<code>3ffe::/16</code>前缀分配给了6bone网络，但在2006年停止使用。</li>
<li><strong><code>::/96</code></strong>：这是<strong>IPv4兼容的IPv6地址</strong>。最初用于IPv6向后兼容IPv4的过渡技术，但这种技术已被弃用。</li>
</ul>
<p>详细内容请看 <a href="https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml" target="_blank" rel="noopener noreferrer">IANA IPv6 Special-Purpose Address Registry</a> 。</p>
<h2>三、调整网络前缀优先级，让 IPv4 访问优先</h2>
<p>​	由前面步骤我们知道 IPv6(<strong><code>::/0</code></strong>) 比 IPv4(<strong><code>::ffff:0:0/96</code></strong>) 的优先级高，如果想让ipv4访问优先，我们通过 <strong><code>netsh interface ipv6</code></strong> 命令调整优先级。</p>
<p>​	Win + S 进入对话框，输入 cmd，选择 <strong><code>以管理员身份运行</code></strong>，执行调整命令，可以看到 IPv4(<strong><code>::ffff:0:0/96</code></strong>) 优先级最高。</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/1a5018d2dd6815d088156af60ba9d01e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	使用ping命令进行验证</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/8c4ceb2c99732c334d465c8e4acda11e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>如果重启电脑后，发现还是 IPv6 访问优先。需要加回 IPv6 的网络前缀，使IPv4 访问优先。</p>
<blockquote>
<p>命令：<strong><code>netsh interface ipv6 add  prefixpolicy ::/0 40 1</code></strong></p>
</blockquote>
<h2>四、如何重新让 IPv6 访问优先</h2>
<p>​	因为微软默认ipv6优先，所以恢复ipv6访问优先很简单：重置！</p>
<blockquote>
<p>命令：<strong><code>netsh interface ipv6 reset</code></strong></p>
</blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/81bbc62658480ca3e8050a4435a2a1c3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>输入完命令重启计算机即可。</p>
<p>电脑重启后，<code>ping www.baidu.com</code> 会解析 IPv6 地址，则重置成功。</p>
]]></content>
    <category term="网络"/>
    <published>2024-09-20T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">基于Algolia实现网站全文搜索</title>
    <id>https://biji.675222.xyz/posts/2024-09-17-blog_%E5%B7%A5%E5%85%B7_Algolia.html</id>
    <link href="https://biji.675222.xyz/posts/2024-09-17-blog_%E5%B7%A5%E5%85%B7_Algolia.html"/>
    <updated>2024-09-22T16:00:48.000Z</updated>
    <summary type="html"><![CDATA[<h2>一、 前言</h2>
<p>​	我的笔记来使用的是本地搜素，可是总是会有一些内容搜索不出来。在网上搜索后，找到了第三方搜索AlgoliaDocSearch 来实现个人网站的全文搜索。</p>
<h2>二、Algolia</h2>
<p>​	VuePress 的官方文档就是使用的 Algolia 搜索，使用 Algolia 搜索最大的好处就是方便，它会自动爬取网站的页面内容并构建索引，你只用申请一个 Algolia 服务，在网站上添加一些代码，就像添加统计代码一样，然后就可以实现一个全文搜索功能</p>
<h2>三、实现全文搜索</h2>
<h5>1.申请Algolia DocSearch服务</h5>]]></summary>
    <content type="html"><![CDATA[<h2>一、 前言</h2>
<p>​	我的笔记来使用的是本地搜素，可是总是会有一些内容搜索不出来。在网上搜索后，找到了第三方搜索AlgoliaDocSearch 来实现个人网站的全文搜索。</p>
<h2>二、Algolia</h2>
<p>​	VuePress 的官方文档就是使用的 Algolia 搜索，使用 Algolia 搜索最大的好处就是方便，它会自动爬取网站的页面内容并构建索引，你只用申请一个 Algolia 服务，在网站上添加一些代码，就像添加统计代码一样，然后就可以实现一个全文搜索功能</p>
<h2>三、实现全文搜索</h2>
<h5>1.申请Algolia DocSearch服务</h5>
<p>​	前往 <a href="https://docsearch.algolia.com/apply/" target="_blank" rel="noopener noreferrer">Algolia DocSearch Apply</a> 网站，填写网站地址、邮箱、仓库地址等信息，然后提交申请。</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/a26c594128435ec52eae983b79839dae.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<blockquote>
<p>注：填写的网站地址必须是公开的、完整的、内容稳定。如果网站还处于测试阶段，申请通过的概率很小。</p>
</blockquote>
<h5>2 回复确认邮件</h5>
<p>​	申请通过后，Algolia DocSearch 官方会发送确认邮件到上一个步骤中填写的邮箱，收到后需要回复一下这个网站是我们负责开发维护的，并且可以修改网站代码。</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/cefffd2de66a1cb3dc6a990ce63f7363.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<blockquote>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">回复内容：Thanks!</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> I</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> am</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> maintatiner</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> website,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> I</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> can</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> code.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/474f4a3778615e8304666192f38ee064.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	然后第二天就会收到包含 AppId 等所需信息的邮件：</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/313fb240493680309001c1d3c4401e4a.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h5>3.启动搜索服务</h5>
<p>Algolia DocSearch 发的邮件包含 <strong>appId、apiKey 和 indexName</strong>，用于在网站生成框架中配置使用，我的笔记模板已经提供，其他框架类似：</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/1a87a85eb74faec8360b8db8c05a44ce.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	邮件还会提供接受邀请的链接，前往该链接重新设置密码后（账号是申请时填的邮箱），即可登录 Algolia。</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/0da780d320570674c5c411892e0cc3a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	登陆后选择对应的项目，与indexName的名字相同：</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/8e179cfddc11e25020f10f3d782804ea.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	点击Go To Crawler（<strong>上图蓝色底</strong>）进入爬虫后台，提示前往<a href="crawler.algolia.com">新网站</a>：</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/83167707a55d37906a841f92dc803266.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	点击进入爬虫：</p>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/7af053eb1a0cddc412fc4c7e8e13b5d3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	如上图红色框内数字为0需进行下一步：</p>
<p>点击左侧菜单中的"Editor"查看并编辑爬虫代码，注意看代码中的 <code>pathsToMatch</code> 路径（图中白色框），很明显不对，后面多了个 <code>docs</code>，将它改成正确的网站路径 <code>https://biji.675222.xyz/**</code>：</p>
<blockquote>
<p>原因是我们的网站主页是https://biji.675222.xyz/，需要搜索的内容也都在这里。</p>
</blockquote>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/35296146de56c200adf676522b023c14.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>修改完成后，进行测试（图中红色框），如果能成功提取到数据则表示没问题（有图中黄色框类似内容），点击右上角的"Save"按钮保存代码后切换回"Overview"，点击右上角的 “Restart crawling” 重新爬取数据即可。</p>
<blockquote>
<p>如果还是没有提取到数据，可参见：https://github.com/mqyqingfeng/Blog/issues/267#issuecomment-1078620438</p>
</blockquote>
<p>完</p>
]]></content>
    <category term="工具"/>
    <published>2024-09-17T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">「Windows系列」如何在Windows 11上引入并安装BBR拥塞算法</title>
    <id>https://biji.675222.xyz/posts/2024-09-16-blog_%E7%BD%91%E7%BB%9C_BBR2.html</id>
    <link href="https://biji.675222.xyz/posts/2024-09-16-blog_%E7%BD%91%E7%BB%9C_BBR2.html"/>
    <updated>2024-09-22T15:55:46.000Z</updated>
    <summary type="html"><![CDATA[<p>​	Windows 11 22H2 已经支持 TCP BBR v2 拥塞控制。本文通过简单的设置，Windows 系统默认的 Cubic 拥塞控制切换到 BBR v2 拥塞控制，无需重启电脑，即可让您的 Windows11 网络速度直接起飞。</p>
<h2>一、什么是BBR算法？</h2>
<p>​	BBR (Bottleneck Bandwidth and Round-trip propagation time) 是一种拥塞控制算法，用于优化 TCP 协议在高带宽、高丢包网络环境下的性能。它可以根据当前网络的拥塞情况和延迟来自适应地调整发送速率，以达到最大的网络吞吐量和最小的延迟。BBR算法通过动态的测量和估计网络带宽和延迟等参数，确定合适的拥塞窗口大小，从而达到更好的传输效果。BBR算法目前已被广泛应用于Google的网络服务中，例如YouTube和Google Cloud平台。</p>]]></summary>
    <content type="html"><![CDATA[<p>​	Windows 11 22H2 已经支持 TCP BBR v2 拥塞控制。本文通过简单的设置，Windows 系统默认的 Cubic 拥塞控制切换到 BBR v2 拥塞控制，无需重启电脑，即可让您的 Windows11 网络速度直接起飞。</p>
<h2>一、什么是BBR算法？</h2>
<p>​	BBR (Bottleneck Bandwidth and Round-trip propagation time) 是一种拥塞控制算法，用于优化 TCP 协议在高带宽、高丢包网络环境下的性能。它可以根据当前网络的拥塞情况和延迟来自适应地调整发送速率，以达到最大的网络吞吐量和最小的延迟。BBR算法通过动态的测量和估计网络带宽和延迟等参数，确定合适的拥塞窗口大小，从而达到更好的传输效果。BBR算法目前已被广泛应用于Google的网络服务中，例如YouTube和Google Cloud平台。</p>
<h2>二、目前Windows 默认的算法是什么？</h2>
<p>​	CUBIC (Cubic TCP) 算法是一种与 BB-Reno 算法类似的拥塞控制算法，但是与 BB-Reno 算法不同的是，CUBIC 算法采用了一种非线性拥塞窗口增长方式，可以更好地适应高带宽、高延迟的网络环境。</p>
<p>​	CUBIC 算法的拥塞控制窗口类似于一个立方体的增长曲线，采用了一种基于拥塞窗口的拟合曲线计算机制，通过对丢包事件的监控来调节窗口大小，实现拥塞避免和控制。CUBIC 算法可以在网络拥塞时自动进行拥塞避免和恢复措施，确保网络性能的稳定和流畅。</p>
<p>​	CUBIC 算法已经被广泛应用于s Linux TCP 模块中，并且还被用于各种广域网和互联网环境中，是一种非常实用的拥塞控制算法。</p>
<h2>三、两者有什么区别？</h2>
<p>BBR算法和CUBIC算法有以下几个本质不同点：</p>
<ol>
<li>算法的思想不同：BBR算法的核心思想是维持网络中最后一个瓶颈链路的带宽和延迟，即以网络的最小带宽和最大延迟为基准进行拥塞控制；而CUBIC算法采用了一种类似于拟合曲线的方式计算拥塞窗口大小。</li>
<li>算法的参数不同：BBR算法需要动态的测量和估计带宽和延迟等网络参数；而CUBIC算法则是根据拥塞窗口大小的变化来进行自适应控制。</li>
<li>算法的适用环境不同：BBR算法更适合高带宽、高延迟、小数据包的网络环境，例如Google的网络服务，而CUBIC算法更适用于高带宽、长距离的广域网环境。</li>
</ol>
<h2>四、什么环境下使用不同的算法？</h2>
<p>​	简单来说，选择合适的拥塞控制算法要根据网络环境的情况来定。一般来说，当网络的带宽较大、丢包率较低时，BBR算法表现得更好，因为它能够更快地发现网络中存在的带宽并充分利用它。而当网络的带宽较小、丢包率较高时，CUBIC算法能够更好地适应网络状况，减少数据包的丢失和网络拥塞情况的发生。所以，在选择算法时，需要结合实际网络状况和需求来进行选择。</p>
<h2>五、实现Windows11 切换BBR算法</h2>
<p><strong>5.1</strong> 查看当前的算法</p>
<ul>
<li>
<p>以管理员身份打开Powershell</p>
</li>
<li>
<p>输入命令查看当前的算法</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NetTCPSetting</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Select</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> SettingName,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> CongestionProvider</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ul>
<figure><img src="https://my-img.675222.xyz/fantasy-biji/2024/09/a7a4266ed457809cbb55f3fb2f74e166.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>5.2</strong> 切换BBR算法</p>
<ul>
<li>
<p>逐条输入命令</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> netsh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> supplemental</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> template=Internet</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> congestionprovider=BBR2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> netsh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> supplemental</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> template=InternetCustom</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> congestionprovider=BBR2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> netsh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> supplemental</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> template=Datacenter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> congestionprovider=BBR2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> netsh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> supplemental</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> template=DatacenterCustom</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> congestionprovider=BBR2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> netsh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> supplemental</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> template=Compat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> congestionprovider=BBR2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>全部都是确定之后，输入查看当前算法的命令再次确认是否正确切换。</p>
</li>
</ul>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SettingName</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">      CongestionProvider</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>]]></content>
    <category term="网络"/>
    <published>2024-09-16T00:00:00.000Z</published>
  </entry>
</feed>